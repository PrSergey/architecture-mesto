services:

  pymongo_api:
    container_name: mongo-sharding-repl
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    networks:
      app-network:
        ipv4_address: 173.17.0.41
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "configReplSet/configSrv1:27017,configSrv2:27018,configSrv3:27019",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv1:
    image: mongo:latest
    container_name: configSrv1
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - config-data-1:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "configReplSet",
        "--bind_ip_all",
        "--port",
        "27017"
      ]

  configSrv2:
    image: mongo:latest
    container_name: configSrv2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - config-data-2:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "configReplSet",
        "--bind_ip_all",
        "--port",
        "27018"
      ]

  configSrv3:
    image: mongo:latest
    container_name: configSrv3
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - config-data-3:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "configReplSet",
        "--bind_ip_all",
        "--port",
        "27019"
      ]

  shard1-master:
    image: mongo:latest
    container_name: shard1-master
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.21
    volumes:
      - shard1-master-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-replica1:
    image: mongo:latest
    container_name: shard1-replica1
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.22
    volumes:
      - shard1-replica1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-replica2:
    image: mongo:latest
    container_name: shard1-replica2
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.23
    volumes:
      - shard1-replica2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-replica3:
    image: mongo:latest
    container_name: shard1-replica3
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.24
    volumes:
      - shard1-replica3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-master:
    image: mongo:latest
    container_name: shard2-master
    restart: always
    ports:
      - "27025:27025"
    networks:
      app-network:
        ipv4_address: 173.17.0.25
    volumes:
      - shard2-master-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-replica1:
    image: mongo:latest
    container_name: shard2-replica1
    restart: always
    ports:
      - "27026:27026"
    networks:
      app-network:
        ipv4_address: 173.17.0.26
    volumes:
      - shard2-replica1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27026"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-replica2:
    image: mongo:latest
    container_name: shard2-replica2
    restart: always
    ports:
      - "27027:27027"
    networks:
      app-network:
        ipv4_address: 173.17.0.27
    volumes:
      - shard2-replica2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27027"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-replica3:
    image: mongo:latest
    container_name: shard2-replica3
    restart: always
    ports:
      - "27028:27028"
    networks:
      app-network:
        ipv4_address: 173.17.0.28
    volumes:
      - shard2-replica3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27028"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data-1:
  config-data-2:
  config-data-3:
  shard1-master-data:
  shard1-replica1-data:
  shard1-replica2-data:
  shard1-replica3-data:
  shard2-master-data:
  shard2-replica1-data:
  shard2-replica2-data:
  shard2-replica3-data: